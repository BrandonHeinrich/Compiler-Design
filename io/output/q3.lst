    1: /*
    2:   Input a number and calculate its factorial.
    3: */
    4: int x, fac;
    5: main {
    6: for(x = 0; x = x + 1; x < 10) {
                A      BC  D  EF   G
    -A Singular factor
     | End of Statement
    -B Singular factor
    -C Additive Operator
    -D Singular factor
     | Compound rvalue
     | End of Statement
    -E Singular factor
    -F Boolean Operator
    -G Singular factor

    7:         put("x =");
                   A     B
    -A StringLiteral
    -B End of Statement

    8:         put(x);
                    AB
    -A Singular factor
    -B End of Statement

    9:         put("\n");
                   A    B
    -A StringLiteral
    -B End of Statement

   10:     };
           A
    -A End of Block

   11:     put("> ");
               A    B
    -A StringLiteral
    -B End of Statement

   12:     x = get(int);
                      AB
    -A Singular factor
    -B End of Statement

   13:     put("x = ");
               A      B
    -A StringLiteral
    -B End of Statement

   14:     put(x);
                AB
    -A Singular factor
    -B End of Statement

   15:     put("\n");
               A    B
    -A StringLiteral
    -B End of Statement

   16:     fac = 1;
                  A
    -A Singular factor
     | End of Statement

   17:     while (x > 0) {
                   AB  C
    -A Singular factor
    -B Boolean Operator
    -C Singular factor

   18:         fac = fac * x;
                        AB  C
    -A Singular factor
    -B Multiplicitive Operator
    -C Compound factor
     | End of Statement

   19:         x = x - 1;
                    AB  C
    -A Singular factor
    -B Additive Operator
    -C Singular factor
     | Compound rvalue
     | End of Statement

   20:     };
           AB
    -A End of Block
    -B End of Statement

   21:     put("factorial = ");
               A              B
    -A StringLiteral
    -B End of Statement

   22:     put(fac);
                  AB
    -A Singular factor
    -B End of Statement

   23:     put("\n");
               A    B
    -A StringLiteral
    -B End of Statement

   24:     
   25: }
       AB
    -A End of Block
    -B COMPILATION SUCSESSFUL

